name: CI
on:
  push:
jobs:
  # Job that runs all go tests.
  go-test:
    runs-on: ubuntu-latest
    container: "golang:1.15"
    services:
      postgres:
        image: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: /gocache
          # Store a cache for the current branch
          key: go-cache-${{ github.ref }}
          # If it is not found or it is the first run, use master's
          # test cache.
          restore-keys: |
            go-cache-refs/heads/master
      - name: Run tests
        env:
          POSTGRES_HOST: postgres
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          GOCACHE: /gocache
        run: make test

  # Job that runs gofumports on all go source files. Will fail if any formatting changes
  # have not been committed.
  go-format:
    runs-on: ubuntu-latest
    container: "golang:1.15"
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install tools
        run: make install-tools
      - name: Format
        run: make format
      - name: Check for changes
        run: make has-changes

  # Job that runs golangci-lint on all go source files. Will fail on any linting
  # errors.
  go-lint:
    runs-on: ubuntu-latest
    container: "golang:1.15"
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install tools
        run: make install-tools
      - name: Lint
        run: make lint

  # Job that ensures all dependencies are added to the go.mod and go.sum files
  go-mod:
    runs-on: ubuntu-latest
    container: "golang:1.15"
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Tidy
        run: make modules
      - name: Check for changes
        run: make has-changes

  # Job that runs any code generation specified using go:generate commands. Will fail
  # if any changes from generation have not been committed.
  go-generate:
    runs-on: ubuntu-latest
    container: "golang:1.15"
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install tools
        run: make install-tools
      - name: Generate files
        run: make generate
      - name: Check for changes
        run: make has-changes
